<Application x:Class="ImgChecker.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ImgChecker"
             xmlns:viewModel="clr-namespace:ImgChecker.MVVM.ViewModel"
             xmlns:view="clr-namespace:ImgChecker.MVVM.View"
             xmlns:properties="clr-namespace:ImgChecker.Properties"
             StartupUri="Menu.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <BooleanToVisibilityConverter x:Key="MyBoolToVisibilityConverter" />

            <Style x:Key="ProjectBorderStyleOld" TargetType="{x:Type Border}">
                <Setter Property="Border.Background" Value="White"/>
                <Style.Triggers>
                    <Trigger Property="Border.IsMouseOver" Value="True">
                        <Setter Property="Border.Background" Value="#f7f7f7" />
                        <Setter Property="Border.Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="RecentBorderStyleOld" TargetType="{x:Type Border}">
                <Setter Property="Border.Background" Value="#EAEAEA"/>
                <Style.Triggers>
                    <Trigger Property="Border.IsMouseOver" Value="True">
                        <Setter Property="Border.Background" Value="#cccccc" />
                        <Setter Property="Border.Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ContextMenuStyleOld" TargetType="{x:Type ContextMenu}">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border x:Name="Border" Background="White" BorderThickness="1">
                                <ScrollViewer x:Name="ScrollViewer">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate DataType="{x:Type viewModel:ProjectsViewModel}">
                <view:ProjectsView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:LearnViewModel}">
                <view:LearnView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:SettingsViewModel}">
                <view:SettingsView/>
            </DataTemplate>

            <!--Styling of bright Grid to switch between themes-->
            <Style x:Key="BrightGridStyle" TargetType="{x:Type Grid}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Background" Value="#FFF5F5F5"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Background" Value="#FF3E3E40"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of dull Grid to switch between themes-->
            <Style x:Key="DullGridStyle" TargetType="{x:Type Grid}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Background" Value="#FFE8E8E8"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Background" Value="#FF252526"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of TextBlock to switch between themes-->
            <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Foreground" Value="#FF1E1E1E"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Foreground" Value="#FFF1F1F1"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Label to switch between themes-->
            <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Foreground" Value="#FF1E1E1E"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Foreground" Value="#FFF1F1F1"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of TextBox to switch between themes-->
            <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Foreground" Value="#FF1E1E1E"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Foreground" Value="#FFF1F1F1"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of TextBox (version 2) to switch between themes-->
            <Style x:Key="TextBoxStyle2" TargetType="{x:Type TextBox}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Foreground" Value="#FF1E1E1E"/>
                        <Setter Property="Background" Value="#FFE8E8E8"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Foreground" Value="#FFF1F1F1"/>
                        <Setter Property="Background" Value="#FF252526"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Light Mode Button-->
            <Style x:Key="LightModeButton" TargetType="{x:Type Button}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Enable button-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=LightModeButton}" Value="Enable">
                        <Setter Property="IsEnabled" Value="True"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Disable button-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=LightModeButton}" Value="Disable">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Add shadow during Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="#DADBDC" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->

                    <!--Add shadow during Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="Black" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Dark Mode Button-->
            <Style x:Key="DarkModeButton" TargetType="{x:Type Button}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Enable button-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkModeButton}" Value="Enable">
                        <Setter Property="IsEnabled" Value="True"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Disable button-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkModeButton}" Value="Disable">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Add shadow during Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="#DADBDC" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->

                    <!--Add shadow during Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="Black" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of GroupBox to switch between themes-->
            <Style x:Key="GroupBoxStyle" TargetType="{x:Type GroupBox}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Background" Value="#FFF5F5F5"/>
                        <Setter Property="Foreground" Value="#FF1E1E1E"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="#DADBDC" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Background" Value="#FF3E3E40"/>
                        <Setter Property="Foreground" Value="#FFF1F1F1"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="Black" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of TabControl to switch between themes-->
            <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Background" Value="#FFE8E8E8"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="#DADBDC" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Background" Value="#FF252526"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="Black" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Main Buttons-->
            <Style x:Key="MainButton" TargetType="{x:Type Button}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Add shadow during Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="#DADBDC" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->

                    <!--Add shadow during Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="Black" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Side Buttons-->
            <Style x:Key="SideButton" TargetType="{x:Type Button}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Add shadow during Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="#DADBDC" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->

                    <!--Add shadow during Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="Black" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Border to switch between themes-->
            <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Background" Value="#FFF5F5F5"/>
                        <Setter Property="BorderBrush" Value="#DADBDC"/>
                        <Setter Property="BorderThickness" Value="1,1,1,0"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="#DADBDC" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Background" Value="#FF3E3E40"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="Black" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Border (version 2) to switch between themes-->
            <Style x:Key="BorderStyle2" TargetType="{x:Type Border}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Background" Value="LightGray"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Background" Value="DarkGray"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Border (version 3) to switch between themes-->
            <Style x:Key="BorderStyle3" TargetType="{x:Type Border}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="#DADBDC" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Background" Value="DarkGray"/>
                        <Setter Property="BorderBrush" Value="White"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="Black" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Border (version 4) to switch between themes-->
            <Style x:Key="BorderStyle4" TargetType="{x:Type Border}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Background" Value="#FFE8E8E8"/>
                        <Setter Property="BorderBrush" Value="#DADBDC"/>
                        <Setter Property="BorderThickness" Value="1,1,1,0"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="#DADBDC" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Background" Value="#FF252526"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="Black" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of ScrollViewer to switch between themes-->
            <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Background" Value="#FFF5F5F5"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="#DADBDC" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Background" Value="#FF3E3E40"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="Black" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of ProjectBorderStyle-->
            <Style x:Key="ProjectBorderStyle" TargetType="{x:Type Border}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Border.Background" Value="#FFF5F5F5"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Border.Background" Value="#FF3E3E40"/>
                    </DataTrigger>
                    <!--End-->

                    <Trigger Property="Border.IsMouseOver" Value="True">
                        <Setter Property="Border.Background" Value="#AEAEAE" />
                        <Setter Property="Border.Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--Styling of RecentBorderStyle to switch between themes-->
            <Style x:Key="RecentBorderStyle" TargetType="{x:Type Border}">
                <Style.Triggers>
                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Border.Background" Value="#FFF5F5F5"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="#DADBDC" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Border.Background" Value="#FF3E3E40"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="12" Color="Black" Direction="-75" Opacity="0.8"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->

                    <Trigger Property="Border.IsMouseOver" Value="True">
                        <Setter Property="Border.Background" Value="#AEAEAE" />
                        <Setter Property="Border.Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--Styling of ContextMenuStyle to switch between themes-->
            <Style x:Key="ContextMenuStyle" TargetType="{x:Type ContextMenu}">
                <Style.Triggers>
                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Foreground" Value="#FF1E1E1E"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ContextMenu}">
                                    <Border x:Name="Border" Background="#FFF5F5F5" BorderThickness="1">
                                        <ScrollViewer x:Name="ScrollViewer">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Foreground" Value="#FFF1F1F1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ContextMenu}">
                                    <Border x:Name="Border" Background="#FF3E3E40" BorderThickness="1">
                                        <ScrollViewer x:Name="ScrollViewer">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Projects icon to switch between themes-->
            <Style x:Key="ProjectsIconStyle" TargetType="{x:Type Image}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Source" Value="/Resources/cube-gray.png"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Source" Value="/Resources/cube-white.png"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Learn icon to switch between themes-->
            <Style x:Key="LearnIconStyle" TargetType="{x:Type Image}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Source" Value="/Resources/grad-gray.png"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Source" Value="/Resources/grad-white-new.png"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Settings icon to switch between themes-->
            <Style x:Key="SettingsIconStyle" TargetType="{x:Type Image}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Source" Value="/Resources/settings-gray.png"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Source" Value="/Resources/settings-white-new.png"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Recent Projects icon to switch between themes-->
            <Style x:Key="RecentProjectsIconStyle" TargetType="{x:Type Image}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Source" Value="/Resources/cube-big.png"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Source" Value="/Resources/cube-big-white.png"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Rectangle to switch between themes-->
            <Style x:Key="RectangleStyle" TargetType="{x:Type Rectangle}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Fill" Value="#FFF5F5F5"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Fill" Value="#FF3E3E40"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Question icon to switch between themes-->
            <Style x:Key="QuestionIconStyle" TargetType="{x:Type Image}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Source" Value="/Resources/question-gray.png"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Source" Value="/Resources/question-white.png"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of Folder icon to switch between themes-->
            <Style x:Key="FolderIconStyle" TargetType="{x:Type Image}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Source" Value="/Resources/folder-gray.png"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Source" Value="/Resources/folder-white.png"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

            <!--Styling of ListBox to switch between themes-->
            <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
                <Style.Triggers>
                    <!--Bind settings property-->

                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                        <Setter Property="Background" Value="#FFE8E8E8"/>
                    </DataTrigger>
                    <!--End-->

                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                        <Setter Property="Background" Value="#FF252526"/>
                    </DataTrigger>
                    <!--End-->
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>


<Page x:Class="ImgChecker.App"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ImgChecker"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="App">

    <Grid>
        
    </Grid>
</Page>
